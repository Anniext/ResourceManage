// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameAvtJoinnum = "avt_joinnum"

// AvtJoinnum mapped from table <avt_joinnum>
type AvtJoinnum struct {
	ID            int64   `gorm:"column:id;type:int;primaryKey;autoIncrement:true" json:"id,string"`
	Group_        *int64  `gorm:"column:group;type:int;comment:设备组序号" json:"group"`
	JoinNum       *int64  `gorm:"column:join_num;type:int" json:"join_num"`
	EquipmentType *int64  `gorm:"column:equipment_type;type:int;comment:1-灯光；2-空调；3-窗帘；4-投影仪；5-幕布；6-电脑一体机；7-录播主机；8-大屏；9-功放；10-六合一传感器；11-电流电压传感器；12-触摸屏；13-ip电话；14-电子班牌；15-门禁；16-学生摄像头；17-老师摄像头" json:"equipment_type"`
	EquipmentName *string `gorm:"column:equipment_name;type:varchar(30)" json:"equipment_name"`
	Name          *string `gorm:"column:name;type:varchar(30);comment:功能名称" json:"name"`
	RoomID        *int64  `gorm:"column:room_id;type:int" json:"room_id"`
	Sort          *int64  `gorm:"column:sort;type:int" json:"sort"`
	ShowStatus    *int64  `gorm:"column:show_status;type:int;comment:是否显示在设备列表：0-不显示，1-显示，2-故障joinnum" json:"show_status"`
	ValueEnum     *string `gorm:"column:value_enum;type:varchar(100);comment:0:关,1:开" json:"value_enum"`
	ValueType     *string `gorm:"column:value_type;type:varchar(255);comment:类型type  1: bool值 2: int/float值 3: 二进制串(暂不支持)" json:"value_type"`
	JoinnumType   *int64  `gorm:"column:joinnum_type;type:int;default:1;comment:1-普通属性；2-控制属性；3-故障属性" json:"joinnum_type"`
	ButtonType    *int64  `gorm:"column:button_type;type:int;default:1;comment:前端显示的按钮类型：1-开关类；2-分段式（分段式需要配置json）；3:-组合，音量+，音量-" json:"button_type"`
}

// TableName AvtJoinnum's table name
func (*AvtJoinnum) TableName() string {
	return TableNameAvtJoinnum
}
